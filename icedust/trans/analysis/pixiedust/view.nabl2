module pixiedust/view

rules

  [[ Component(name, params, body) ^ (module_scope) ]] := 
    new body_scope,
    body_scope -P-> module_scope,
    Member{"children"} <- body_scope,
    Member{"children"} : TTuple(TView(), TZeroOrMore(), TOnDemand()),
    Member{"children"}.side := None(),
    Map1T [[params ^ (body_scope) : tpes]],
    Component{name} <- module_scope,
    Component{name} : TComponent(tpes),
    Component{name}.parameters := params,
    Component{name}.componentKind := NormalComponentKind(),
    Component{name}.body := body,
    Map1T [[body ^ (body_scope): (_) ]].
  
  [[ NativeComponent(name, params) ^ (module_scope) ]] := 
    new dummy_scope,
    dummy_scope -P-> module_scope,
    Map1T [[ params ^ (dummy_scope) : tpes ]],
    Component{name} <- module_scope,
    Component{name} : TComponent(tpes),
    Component{name}.parameters := params,
    Component{name}.componentKind := NativeComponentKind().
    
  
  [[ RenderComponent(name, parameters, children) ^ (module_scope) : ty ]] :=
    ty == TTuple(TView(), TOne(), TIncremental()),
    Component{name} -> module_scope,
    Component{name} |-> name_def,
    Component{name} : TComponent(params),
    Map1T [[ parameters ^ (module_scope) : tparams ]],
    tparams == params,
    Map1T [[ children ^ (module_scope) : (_) ]].
    
  
  [[ RenderDomElement(name, properties, children) ^ (module_scope) : ty ]] :=
    ty == TTuple(TView(), TOne(), TIncremental()),
    Map1T [[ children ^ (module_scope) : (_) ]].
  
  
  
  [[ RenderLoop(var, exp, body) ^ (module_scope) : ty ]] :=
    ty == TTuple(TView(), exp_mult, TIncremental()),
    [[ exp ^ (module_scope) : TTuple(exp_type, exp_mult, exp_strat) ]],
    new body_scope,
    body_scope -P-> module_scope,
    Member{var} <- body_scope,
    Member{var} : TTuple(exp_type, TOne(), exp_strat),
    Member{var}.side := None(),
    Member{var}.variableType := NormalVariableType(),
    [[ body ^ (body_scope) : (_) ]].
    
    
  [[ ActionDeclaration(name, params, stmts) ^ (module_scope) : NoValue() ]] :=
    Action{name} <- module_scope.
  
  