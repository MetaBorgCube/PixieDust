module generating/pixiedust/execute

imports
  api/module-names-api

  lib/scopes
  
  generating/pixiedust/names
  generating/pixiedust/data
  generating/pixiedust/expression

rules

  modulename-to-execute-stmts : (env, x_moduleName) -> result
    with
      expressions := <modulename-get-exprs> x_moduleName
    ; (env', x_result) := <fresh-variable> env
    ; (env'', [
        stmts_data,
        stmts_execute,
        exp_data
      ]) := <thread-environment(
        push-scope,
        env-thread-param(modulename-to-data-stmts | x_moduleName),
        env-thread-param(env-fold-mapconcat(execute-exp-stmts(|x_result)) | expressions),
        env-readonly(get-data-expressions-from-env),
        pop-scope
      )> env'
    ; x_executeFunctionName := <execute-function-name>
    ; stmts  := js-stmts |[
      function x_executeFunctionName() {
        stmts_data
        var x_result = [];
        stmts_execute
        return {
          execute: x_result,
          data: exp_data
        };
      }
      module.exports.x_executeFunctionName = x_executeFunctionName;
    ]| 
    ; result := (env'', stmts)
      
  execute-exp-stmts(|x_result) : (env, e) -> result
    with
      (env', (exp_e, stmts_e)) := <exp-to-js-stmts> (env, e)
    ; stmts := js-stmts |[
        stmts_e
        x_result.push(exp_e);
      ]|
    ; result := (env', stmts)