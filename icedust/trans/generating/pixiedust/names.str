module generating/js/names

imports
  lib/string
  js/util

  api/model-names-api
  api/types-names-api
  api/functions-names-api
  api/import-names-api
  api/types-api

rules // method names  
  getter-name = !$[get[<ucfirst>]]
  setter-name = !$[set[<ucfirst>]]
  unidirectional-setter-name = !$[unidirectionalSet[<ucfirst>]]
  flag-dirty-name = !$[flagDirty[<ucfirst>]]
  subscribe-dirty-name = !$[subscribeDirty[<ucfirst>]]
  unsubscribe-dirty-name = !$[unsubcribeDirty[<ucfirst>]]
  dirty-subscriber-name = !$[[<id>]DirtySubscriber]
  dirty-subscribers-name = !$[[<id>]DirtySubscribers]
  component-name =  !$[[<(ucfirst, ucfirst) ; conc-strings>]Component]
  component-entity-prop-name = lcfirst
  
  user-defined-function-scope-name = !"userDefinedFunctions"
  builtin-function-scope-name = !"expressions"
  imports-function-scope-name = !"imports"
  
  
  functionname-get-reference-exp: x_functionname -> js-exp |[x_userDefinedScope.x_functionname]|
    where
      <functionname-is-userdefined> x_functionname
    with 
      x_userDefinedScope := <user-defined-function-scope-name>
      
  functionname-get-reference-exp: x_functionname -> js-exp |[x_builtinScope.x_functionname]|
    where
      <functionname-is-builtin> x_functionname
    with 
      x_builtinScope := <builtin-function-scope-name>
      
  functionname-get-reference-exp: x_functionname -> js-exp |[x_importScope[exp_importPath].x_importName]|
    where
      <functionname-is-imported> x_functionname
    with
      x_importScope := <imports-function-scope-name>
    ; exp_importPath := <functionname-get-importpath ; js-string> x_functionname
    ; x_importName := <functionname-get-importname> x_functionname 
       
  
  identity-name = !"$id"
  
  dirty-subscriber-variable-name = !$[dirtySubscriber]
  dirty-subscriber-field-name = !$[[<id>]DirtySubscribers]
  subscribe-dirty-dependson-method-name = !$[subscribeDirtyDependsOn]
  unsubscribe-dirty-dependson-method-name = !$[unsubscribeDirtyDependsOn]
  
  user-value-name = id
  cache-value-name = !$[[<id>]_cache]
  
  execute-function-name = !"main"
  
rules // constant expressions
  exp-empty-array = !js-exp |[[]]|

  exp-call-dirty-subscriber = !js-exp |[runtime.callDirtySubscriber]|
  
  exp-empty-multiplicity = upper-many ; exp-empty-array
  exp-empty-multiplicity = upper-one ; js-null
  
  exp-empty-attribute = name-get-multiplicity ; exp-empty-multiplicity