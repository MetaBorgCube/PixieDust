module generating/js/names

imports
  api/model-names-api
  api/types-api
  
  signatures/Types-sig
  
  lib/js/js-util
  lib/string
  
rules

  attribute-name: attribute -> $[[entity]_[attribute]]
    with
      entity := <attributename-get-entityname> attribute
  
  setter-function-name: attribute -> $[set[name]]
    with
      name := <attribute-name> attribute
  
  function-name-many = !$[[<id>]_Many]
  
  
  default-multiplicity = (id, id) <+ !(<id>, One())
  
  attribute-function-name(|prefix) = default-multiplicity ; (attribute-name, multiplicity-function-postfix) ; !$[[prefix][<Fst>][<Snd>]]
  
  getter-function-name = attribute-function-name(|"get")
  setter-function-name = attribute-function-name(|"set")
  add-function-name = attribute-function-name(|"add")
  invalidation-function-name = attribute-function-name(|"invalidate")
  memoize-function-name = attribute-function-name(|"memoize")
  calculate-function-name = attribute-function-name(|"calculate")
  
  multiplicity-function-postfix = upper-one ; !""
  multiplicity-function-postfix = upper-many ; !"_Many"
  
  empty-array = !js-exp |[constants.EMPTY_ARRAY]|
  empty-object = !js-exp |[constants.EMPTY_OBJECT]|
  
  id-var = upper-one ; !"id"
  id-var = upper-many ; !"ids"
  
  this-var = !"$this"
  
  scope-var = !"scope"
      
  int-to-varname : i -> $[_[i]]
  int-to-varname-inc = !(<int-to-varname>, <inc>)
  
  gen-varnames : (i, n) -> vars 
    with
      vars := <dec ; upto ; map(!(<id>, i) ; add ; int-to-varname) ; ListToTuple > n
  
  gen-varnames-inc : (i, n) -> (i', vars)
    with
      vars := <gen-varnames> (i,n)
    ; i' := <add> (i, n)
  
  attribute-table-expression: attribute -> <js-string> x_name
    with
      x_name := <attribute-name> attribute
  
  entity-table-expression: x_attributeName -> <js-string> x_entity
    with
      x_entity := <attributename-get-entityname> x_attributeName
      
  entityname-to-create-action-name : x_entityname -> $[create[x_Entityname]]
    with
      x_Entityname := <ucfirst> x_entityname
  
  
      
      