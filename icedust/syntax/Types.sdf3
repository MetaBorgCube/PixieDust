module Types

imports

  Common

context-free syntax

  AnyType = EntityType
  AnyType = PrimitiveType

  EntityType.EntityType = ID

  PrimitiveType.Boolean   = <Boolean>
  PrimitiveType.Float     = <Float>
  PrimitiveType.Datetime  = <Datetime>
  PrimitiveType.Int       = <Int>
  PrimitiveType.String    = <String>
  
  Multiplicity.One        = <1>
  Multiplicity.ZeroOrOne  = <?>
  Multiplicity.OneOrMore  = <+>
  Multiplicity.ZeroOrMore = <*>
  
  MultiplicityOrdering                   = Multiplicity
  MultiplicityOrdering.ZeroOrMoreOrdered = <* (ordered)>
  MultiplicityOrdering.OneOrMoreOrdered  = <+ (ordered)>

  Strategy.OnDemand            = <(on-demand)>
  Strategy.OnDemandIncremental = <(on-demand incremental)>
  Strategy.Incremental         = <(incremental)>
  Strategy.Eventual            = <(eventual)>
  Strategy.OnDemandEventual    = <(on-demand eventual)>
  Strategy.Inline              = <(inline)>
  
context-free syntax
  PrimitiveType.View = <View>
  
  ActionType.ActionType = <Action[<{TypeWithMultiplicity ","}*>]>
  AnyType = ActionType
  
  TypeWithMultiplicity.TypeWithMultiplicity = <<AnyType><Multiplicity>>
  TypeWithMultiplicity.TypeWithDefaultMultiplicity = <<AnyType>>
  
  TypeParameter.TypeParameter = <<ID> : <AnyType><Multiplicity>>
  TypeParameter.TypeParameter2 = <<ID> : <AnyType>>
  
  TypeParameter.RefTypeParameter = <ref <ID> : <AnyType><Multiplicity>>
  TypeParameter.RefTypeParameter2 = <ref <ID> : <AnyType>>
  
  TypeParameter.RefTypeParameter = <ref <ID> : <AnyType><Multiplicity>>
  TypeParameter.RefTypeParameter2 = <ref <ID> : <AnyType>>