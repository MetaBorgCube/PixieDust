module pixiedust/View

imports
  Common
  Expressions
  Types
  pixiedust/Action
  pixiedust/Types
  
context-free syntax
  
  View = Component
  
  Component.Component = <
    component <ID>(<{TypeParameter ", "}*>){
      <{ViewMember "\n"}*>
    }
  >
  
  Component.NativeComponent = <
    native component <ID>(<{TypeParameter ", "}*>)
  >
  
  
  ViewMember.Render = Exp
  ViewMember = Action
  
  Render = RenderLoop
  Render = RenderComponent
  Render = RenderDomElement 
  
  RenderDomElement.RenderDomElement  = <
    <DomID>[<{DomElementProperty ", "}*>] {
      <{Exp "\n"}*>
    }> 
  RenderDomElement.RenderDomElement2 = <
    <DomID> {
      <{Exp "\n"}*>
    }>
  RenderDomElement.RenderDomElement3 = <<DomID>[<{DomElementProperty ", "}*>]>
  
  RenderComponent.RenderComponent  = <
    @<ID>(<{Exp ", "}*>) { 
      <{Exp "\n"}*> 
    }>
  RenderComponent.RenderComponent2 =  <
    @<ID> { 
      <{Exp "\n"}*> 
    }>
  RenderComponent.RenderComponent3 = <@<ID>(<{Exp ", "}*>)> { prefer } //above Rendercomponent4 ( Exp )
  
  
  RenderComponent = RenderComponent4
  RenderComponent4.RenderComponent4 = <@<ID>> //{ avoid }
  
  
  RenderLoop.RenderLoop = <
    for(<ID> in <Exp>) <Exp>
  >
  
  DomElementProperty.DomElementProperty = <<ID> = <DomElementPropertyValue>>
  
  DomElementPropertyValue.DomElementPropertyValueExp = Exp
  DomElementPropertyValue.DomElementPropertyValueMap = <{
    <{DomElementProperty ", "}*>
  }>
  DomElementPropertyValue = Action
  
  context-free restrictions
  
  RenderComponent4 -/- [\(]
    
//    Render.RenderExp > Render.RenderComponent

lexical syntax
  DomID = ID
  DomID = Keyword { reject }
  DomID = ViewKeyword { reject }
  
  ViewKeyword = "children"  
